[1mdiff --git a/src/ManageCaseTab.js b/src/ManageCaseTab.js[m
[1mindex b7813d9..7a3a863 100644[m
[1m--- a/src/ManageCaseTab.js[m
[1m+++ b/src/ManageCaseTab.js[m
[36m@@ -53,7 +53,8 @@[m [mclass ManageCaseTable extends React.Component {[m
      componentWillMount(){[m
         //store.dispatch({type:"loadTestCase",value:"a1pe mvt project_Deployment_Automated"});[m
         // should load case first, then dispatch action to reducer to update state !!![m
[31m-        this.props.actions.loadTestCase("a1pe mvt project_Deployment_Automated");[m
[32m+[m[32m        //this.props.actions.loadTestCase("a1pe mvt project_Deployment_Automated");[m
[32m+[m[32m        this.props.actions.loadTestCase("MES MVT");[m
      }[m
     AddCase=()=>{[m
         // store.dispatch({type:"addcase",value:{ID:"New Case",Description:"description",Time:"0"}})[m
[1mdiff --git a/src/Vision.js b/src/Vision.js[m
[1mindex 0eecbd8..08454bd 100644[m
[1m--- a/src/Vision.js[m
[1m+++ b/src/Vision.js[m
[36m@@ -15,17 +15,17 @@[m [mclass Vision extends React.Component{[m
     constructor(props){[m
         super(props);[m
     //   this.state={visionName:''};[m
[31m-       // this.state.visionName=this.props.match.params.visionName; // get the vision name[m
[31m-    this.state={activeKeyd:133333333333};    //this.state is the state of component itself[m
[32m+[m[32m     //this.state.visionName=this.props.match.params.visionName; // get the vision name[m
[32m+[m[32m     this.state={activeKeyd:133333333333};    //this.state is the state of component itself[m
     }[m
   [m
[31m-// componentWillMount=()=>{[m
[31m-// this.reloadVision();[m
[31m-// }[m
[31m-// reloadVision=()=>{[m
[31m-//     const visionName=this.props.match.params.visionName;[m
[31m-//     this.props.visionActions.loadSelectedVision(visionName);[m
[31m-// }[m
[32m+[m[32mcomponentWillMount=()=>{[m
[32m+[m[32m    this.reloadVision();[m
[32m+[m[32m}[m
[32m+[m[32mreloadVision=()=>{[m
[32m+[m[32m    const visionName=this.props.match.params.visionName;[m
[32m+[m[32m    this.props.visionActions.loadVision(visionName);[m
[32m+[m[32m}[m
     [m
     callback=function callback(key){[m
       [m
[36m@@ -41,9 +41,10 @@[m [mclass Vision extends React.Component{[m
                <p>{this.state.activeKeyd}</p>[m
                <h1>Manage MVT</h1>[m
                <h3>{this.props.vision.name}</h3>[m
[31m-               <p>media:{this.props.vision.id}</p>[m
[31m-               <p>status:{this.props.status}</p>[m
[31m-               <p>vm:{this.props.vm}</p>[m
[32m+[m[32m               <p>Note:{this.props.vision.note}</p>[m
[32m+[m[32m               <p>media:{this.props.vision.media}</p>[m
[32m+[m[32m               <p>status:{this.props.vision.status}</p>[m
[32m+[m[32m               {/* <p>vm:{(this.props.vision.project_schedule)[0].machine_demand.dorm.name}</p> */}[m
                <button>Refresh</button>[m
                <div className="tab-header">[m
                     <ul>[m
[36m@@ -86,7 +87,7 @@[m [mclass Vision extends React.Component{[m
 function mapStateToProps(state,ownProps){ //state in function mapStateToProps is the state in store, shared by all child components[m
     return {[m
         [m
[31m-        vision:state.visionsReducer,[m
[32m+[m[32m        vision:state.visionsReducer.vision,[m
         activeKey:state.reducer.showMsg[m
 [m
     }[m
[1mdiff --git a/src/store/store.js b/src/store/store.js[m
[1mindex 2fb0f71..b30270f 100644[m
[1m--- a/src/store/store.js[m
[1m+++ b/src/store/store.js[m
[36m@@ -12,7 +12,7 @@[m [mconst reducers=combineReducers({reducer,visionsReducer});[m
 //const store=createStore(reducers,composeWithDevTools());[m
 const store=createStore([m
   reducers,[m
[31m-  storeEnhancer(applyMiddleware(thunk)))[m
[32m+[m[32m  composeWithDevTools(applyMiddleware(thunk)))[m
 export default store;[m
 [m
 [m
[1mdiff --git a/src/store/visionActions.js b/src/store/visionActions.js[m
[1mindex cdfe36b..035e61b 100644[m
[1m--- a/src/store/visionActions.js[m
[1m+++ b/src/store/visionActions.js[m
[36m@@ -43,15 +43,23 @@[m [mexport function addCase(testcase){[m
 }[m
 export function loadTestCase(blueprint){[m
 [m
[31m-return function(dispatch){[m
[31m-    return  visionApi.loadTestCases(blueprint)[m
[31m-    .then(testcases=>{[m
[31m-        dispatch({type:"loadTestCase",value:testcases}) // use middleware for asynchrous request[m
[31m-    })[m
[31m-    .catch(err=>{[m
[31m-        throw err;[m
[31m-    }); [m
[32m+[m[32m    return function(dispatch){[m
[32m+[m[32m        return  visionApi.loadTestCases(blueprint)[m
[32m+[m[32m        .then(testcases=>{[m
[32m+[m[32m            dispatch({type:"loadTestCase",value:testcases}) // use middleware for asynchrous request[m
[32m+[m[32m        })[m
[32m+[m[32m        .catch(err=>{[m
[32m+[m[32m            throw err;[m
[32m+[m[32m        });[m[41m [m
 [m
[32m+[m[32m    }[m[41m [m
 }[m
[31m-     [m
[32m+[m
[32m+[m[32mexport function loadVision(visionName){[m
[32m+[m[32m    return function(dispatch){[m
[32m+[m[32m        return visionApi.loadVision(visionName)[m
[32m+[m[32m        .then(vision=>{[m
[32m+[m[32m            dispatch({type:"loadvision",value:vision})[m
[32m+[m[32m        })[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/store/visionsReducer.js b/src/store/visionsReducer.js[m
[1mindex bb966be..7627427 100644[m
[1m--- a/src/store/visionsReducer.js[m
[1m+++ b/src/store/visionsReducer.js[m
[36m@@ -29,15 +29,15 @@[m [mconst visions={[m
             }[m
 [m
         ],[m
[31m-        vision:{[m
[31m-            Id:"12",[m
[31m-            name:"MTELL_Deployment",[m
[31m-            note:"ProMV Deployment for Bedford RD team and QE in Mvt2-pro-d1",[m
[31m-            status:"offline",[m
[31m-            media:"RC123"[m
[31m-          [m
[32m+[m[32m    vision:{[m
[32m+[m[32m        Id:"12",[m
[32m+[m[32m        name:"MTELL_Deployment",[m
[32m+[m[32m        note:"ProMV Deployment for Bedford RD team and QE in Mvt2-pro-d1",[m
[32m+[m[32m        status:"offline",[m
[32m+[m[32m        media:"RC123"[m
[32m+[m[41m        [m
 [m
[31m-        },[m
[32m+[m[32m    },[m
     cases:[[m
         {[m
             Id:"dddfssfsd",[m
[36m@@ -85,6 +85,12 @@[m [mexport default (state=visions,action)=>{[m
             {Id:"New Case",Description:"description",Time:"0"}];[m
         return newState;[m
     }[m
[32m+[m[32m    else if(action.type==="loadVision")[m
[32m+[m[32m    {[m
[32m+[m[32m        const newState=Object.assign({},state);[m
[32m+[m[32m        newState.vision=action.value;[m
[32m+[m[32m        return newState;[m
[32m+[m[32m    }[m
     [m
 [m
 [m
[1mdiff --git a/src/visionApi.js b/src/visionApi.js[m
[1mindex 3a6031c..165bbb0 100644[m
[1m--- a/src/visionApi.js[m
[1m+++ b/src/visionApi.js[m
[36m@@ -17,6 +17,18 @@[m [mclass VisionApi{[m
         })[m
      [m
     }[m
[32m+[m[32m    static loadVision(visionName){[m
[32m+[m[32m        return new Promise((resolve,reject)=>{[m
[32m+[m[32m            axios.get(server+"/api/registry/vision/"+visionName)[m
[32m+[m[32m            .then(res=>{[m
[32m+[m[32m                console.log(res);[m
[32m+[m[32m                resolve(JSON.parse(res.data));[m
[32m+[m[32m            })[m
[32m+[m[32m            .catch(err=>{[m
[32m+[m[32m                console.log(err);[m
[32m+[m[32m            })[m
[32m+[m[32m        })[m
[32m+[m[32m    }[m
 [m
 }[m
 export default VisionApi[m
